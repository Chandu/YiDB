/**
 * 
 */
package com.ebay.cloud.cms.typsafe.entity;

import java.util.Collection;
import java.util.Date;

import org.apache.commons.lang3.builder.ToStringBuilder;
import org.apache.commons.lang3.builder.ToStringStyle;


/**
 * Abstract class for all metadata generated by type safe api
 * 
 * @author liasu
 * 
 */
public abstract class AbstractCMSEntity implements ICMSEntity {

    private String repository;
    private String metaClass;

    public final String get_id() {
        return (String) getFieldValue("_oid");
    }

    public final void set_id(String _id) {
        setFieldValue("_oid", _id);
    }

    public String get_repo() {
        return repository;
    }

    public void set_repo(String repo) {
        repository = repo;
    }

    public final String get_type() {
        return (String) getFieldValue("_type");
    }

    public final void set_type(String _type) {
        setFieldValue("_type", _type);
    }

    public final String get_branch() {
        return (String) getFieldValue("_branch");
    }

    public final void set_branch(String _branch) {
        setFieldValue("_branch", _branch);
    }

    public final Integer get_version() {
        return (Integer) getFieldValue("_version");
    }
    public final void set_version(Integer _version) {
        setFieldValue("_version", _version);
    }

    public final Integer get_pversion() {
        return (Integer) getFieldValue("_pversion");
    }
    public final void set_pversion(Integer _pversion) {
        setFieldValue("_pversion", _pversion);
    }

    public final _StatusEnum get_status() {
        return (_StatusEnum) _StatusEnum.fromString((String) getFieldValue("_status"));
    }
    public final void set_status(_StatusEnum _status) {
        if (_status == null) {
            setFieldValue("_status", null);
        } else {
            setFieldValue("_status", _status.toString());
        }
    }

    @Override
    public String get_hostEntity() {
        return (String) getFieldValue("_hostentity");
    }
    public void set_hostEntity(String host) {
        setFieldValue("_hostEentity", host);
    }

    @Override
    public String get_shardKey() {
        return (String) getFieldValue("_shardkey");
    }
    @Override
    public void set_shardKey(String sh) {
        setFieldValue("_shardkey", sh);
    }

    public final Date get_lastmodified() {
        return cloneDate((Date) getDateField("_lastmodified"));
    }
    public final void set_lastmodified(Date _lastmodified) {
        setDateField("_lastmodified", cloneDate(_lastmodified));
    }

    public Date get_createtime() {
        return getDateField("_createtime");
    }
    public void set_createtime(Date _createtime) {
        setDateField("_createtime", _createtime);
    }

    @Override
    public String get_comment() {
        return (String) getFieldValue("_comment");
    }

    @Override
    public void set_comment(String comment) {
        this.setFieldValue("_comment", comment);
    }

    @Override
    public String get_creator() {
        return (String) getFieldValue("_creator");
    }

    @Override
    public void set_creator(String creator) {
        this.setFieldValue("_creator", creator);
    }

    @Override
    public String get_modifier() {
        return (String) this.getFieldValue("_modifier");
    }

    @Override
    public void set_modifier(String modifier) {
        this.setFieldValue("_modifier", modifier);
    }

    public String get_metaclass() {
        return metaClass;
    }

    public void set_metaclass(String metaClass) {
        this.metaClass = metaClass;
    }

    Date cloneDate(Date d) {
        if (d == null) {
            return d;
        } else {
            return new Date(d.getTime());
        }
    }

    @Override
    public String toString() {
        return ToStringBuilder.reflectionToString(this, ToStringStyle.MULTI_LINE_STYLE);
    }

    public abstract boolean hasField(String fieldName);

    public abstract Object getFieldValue(String fieldName);

    public abstract Collection<String> getFieldNames();

    public abstract void addFieldValue(String fieldName, Object fieldValue);
    
    public abstract void removeFieldValue(String fieldName);

    public abstract void setFieldValue(String fieldName, Object fieldValue);

    //special usage for date fields
    protected abstract Date getDateField(String field);
    protected abstract void setDateField(String fieldName, Date d);
    
    protected abstract Long getLongField(String field);
    protected abstract void setLongField(String fieldName, Long d);


    public abstract void traverse(ICMSEntityVisitor visitor);

}
